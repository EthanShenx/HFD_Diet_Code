row.names = TRUE)
save(deg_list, cell_types, file = "02-01-envVariables.RData")
setwd("/Users/coellearth/Desktop/HFD_Paper/Fig3_DEG:GSEA/DEGs")
load("/Users/coellearth/Desktop/Mammary_Gland_Diet_Project/2DEG/02-01-envVariables.RData")
All <- readRDS("/Users/coellearth/Desktop/Mammary_Gland_Diet_Project/*originaldata/Harmony/harmony_All_sub.rds")
library(ggplot2)
library(RColorBrewer)
library(dplyr)
library(tidyr)
result_list <- lapply(names(deg_list), function(cell_type) {
df <- deg_list[[cell_type]]
count_table <- table(df$regulation)
up_count <- ifelse("Up" %in% names(count_table), count_table["Up"], 0)
down_count <- ifelse("Down" %in% names(count_table), count_table["Down"], 0)
data.frame(CellType = cell_type, Up = up_count, Down = down_count)
})
summary_df <- do.call(rbind, result_list)
summary_df$Total <- summary_df$Up + summary_df$Down
print(summary_df)
ora_results_list <- list()
cell_types <- gsub("[/ ]", "_", cell_types)
for (cell in cell_types) {
deg <- deg_list[[cell]]
up_genes <- rownames(deg[deg$regulation == "Up", ])
down_genes <- rownames(deg[deg$regulation == "Down", ])
up_genes  <- setdiff(up_genes, grep("^Rps|^Rpl", up_genes, value=TRUE))
down_genes  <- setdiff(down_genes, grep("^Rps|^Rpl", down_genes, value=TRUE))
up_entrez <- bitr(up_genes,
fromType = "SYMBOL",
toType   = "ENTREZID",
OrgDb    = org.Mm.eg.db)$ENTREZID
down_entrez <- bitr(down_genes,
fromType = "SYMBOL",
toType   = "ENTREZID",
OrgDb    = org.Mm.eg.db)$ENTREZID
# ---------------- GOBP ----------------
up_go <- enrichGO(
gene          = up_entrez,
OrgDb         = org.Mm.eg.db,
ont           = "BP",
pAdjustMethod = "BH",
readable      = TRUE
)
down_go <- enrichGO(
gene          = down_entrez,
OrgDb         = org.Mm.eg.db,
ont           = "BP",
pAdjustMethod = "BH",
readable      = TRUE
)
# ---------------- KEGG ----------------
up_kegg <- enrichKEGG(
gene          = up_entrez,
organism      = "mmu",
pAdjustMethod = "BH"
)
down_kegg <- enrichKEGG(
gene          = down_entrez,
organism      = "mmu",
pAdjustMethod = "BH"
)
# ---------------- Reactome ----------------
up_reactome <- enrichPathway(
gene          = up_entrez,
organism      = "mouse",
pAdjustMethod = "BH",
readable      = TRUE
)
down_reactome <- enrichPathway(
gene          = down_entrez,
organism      = "mouse",
pAdjustMethod = "BH",
readable      = TRUE
)
# ---------------- Save ----------------
write.csv(as.data.frame(up_go),
paste0("ORA_results/", cell, "_Up_ORA_GO.csv"),
row.names = FALSE)
write.csv(as.data.frame(down_go),
paste0("ORA_results/", cell, "_Down_ORA_GO.csv"),
row.names = FALSE)
write.csv(as.data.frame(up_kegg),
paste0("ORA_results/", cell, "_Up_ORA_KEGG.csv"),
row.names = FALSE)
write.csv(as.data.frame(down_kegg),
paste0("ORA_results/", cell, "_Down_ORA_KEGG.csv"),
row.names = FALSE)
write.csv(as.data.frame(up_reactome),
paste0("ORA_results/", cell, "_Up_ORA_Reactome.csv"),
row.names = FALSE)
write.csv(as.data.frame(down_reactome),
paste0("ORA_results/", cell, "_Down_ORA_Reactome.csv"),
row.names = FALSE)
ora_results_list[[paste0(cell, "_Up_GO")]]        <- up_go
ora_results_list[[paste0(cell, "_Down_GO")]]      <- down_go
ora_results_list[[paste0(cell, "_Up_KEGG")]]      <- up_kegg
ora_results_list[[paste0(cell, "_Down_KEGG")]]    <- down_kegg
ora_results_list[[paste0(cell, "_Up_Reactome")]]  <- up_reactome
ora_results_list[[paste0(cell, "_Down_Reactome")]]<- down_reactome
}
setwd("/Users/coellearth/Desktop/Mammary_Gland_Diet_Project/3Enrichment")
load("/Users/coellearth/Desktop/Mammary_Gland_Diet_Project/2DEG/02-01-envVariables.RData")
ora_results_list <- list()
cell_types <- gsub("[/ ]", "_", cell_types)
for (cell in cell_types) {
deg <- deg_list[[cell]]
up_genes <- rownames(deg[deg$regulation == "Up", ])
down_genes <- rownames(deg[deg$regulation == "Down", ])
up_genes  <- setdiff(up_genes, grep("^Rps|^Rpl", up_genes, value=TRUE))
down_genes  <- setdiff(down_genes, grep("^Rps|^Rpl", down_genes, value=TRUE))
up_entrez <- bitr(up_genes,
fromType = "SYMBOL",
toType   = "ENTREZID",
OrgDb    = org.Mm.eg.db)$ENTREZID
down_entrez <- bitr(down_genes,
fromType = "SYMBOL",
toType   = "ENTREZID",
OrgDb    = org.Mm.eg.db)$ENTREZID
# ---------------- GOBP ----------------
up_go <- enrichGO(
gene          = up_entrez,
OrgDb         = org.Mm.eg.db,
ont           = "BP",
pAdjustMethod = "BH",
readable      = TRUE
)
down_go <- enrichGO(
gene          = down_entrez,
OrgDb         = org.Mm.eg.db,
ont           = "BP",
pAdjustMethod = "BH",
readable      = TRUE
)
# ---------------- KEGG ----------------
up_kegg <- enrichKEGG(
gene          = up_entrez,
organism      = "mmu",
pAdjustMethod = "BH"
)
down_kegg <- enrichKEGG(
gene          = down_entrez,
organism      = "mmu",
pAdjustMethod = "BH"
)
# ---------------- Reactome ----------------
up_reactome <- enrichPathway(
gene          = up_entrez,
organism      = "mouse",
pAdjustMethod = "BH",
readable      = TRUE
)
down_reactome <- enrichPathway(
gene          = down_entrez,
organism      = "mouse",
pAdjustMethod = "BH",
readable      = TRUE
)
# ---------------- Save ----------------
write.csv(as.data.frame(up_go),
paste0("ORA_results/", cell, "_Up_ORA_GO.csv"),
row.names = FALSE)
write.csv(as.data.frame(down_go),
paste0("ORA_results/", cell, "_Down_ORA_GO.csv"),
row.names = FALSE)
write.csv(as.data.frame(up_kegg),
paste0("ORA_results/", cell, "_Up_ORA_KEGG.csv"),
row.names = FALSE)
write.csv(as.data.frame(down_kegg),
paste0("ORA_results/", cell, "_Down_ORA_KEGG.csv"),
row.names = FALSE)
write.csv(as.data.frame(up_reactome),
paste0("ORA_results/", cell, "_Up_ORA_Reactome.csv"),
row.names = FALSE)
write.csv(as.data.frame(down_reactome),
paste0("ORA_results/", cell, "_Down_ORA_Reactome.csv"),
row.names = FALSE)
ora_results_list[[paste0(cell, "_Up_GO")]]        <- up_go
ora_results_list[[paste0(cell, "_Down_GO")]]      <- down_go
ora_results_list[[paste0(cell, "_Up_KEGG")]]      <- up_kegg
ora_results_list[[paste0(cell, "_Down_KEGG")]]    <- down_kegg
ora_results_list[[paste0(cell, "_Up_Reactome")]]  <- up_reactome
ora_results_list[[paste0(cell, "_Down_Reactome")]]<- down_reactome
}
gsea_results_list <- list()
mm_gmt <- read.gmt("/Users/coellearth/Desktop/Mammary_Gland_Diet_Project/3Enrichment/mh.all.v2025.1.Mm.entrez.gmt")
ribo_pattern <- "^Rps|^Rpl"
for (cell in cell_types) {
deg <- deg_list[[cell]]
gene_vector <- deg$avg_log2FC
gene_vector <- gene_vector[is.finite(gene_vector)]
gene_vector <- sort(gene_vector, decreasing = TRUE)
names(gene_vector) <- rownames(deg)
gene_vector <- gene_vector[ !grepl(ribo_pattern, names(gene_vector)) ]
gene_df <- bitr(names(gene_vector),
fromType = "SYMBOL",
toType   = "ENTREZID",
OrgDb    = org.Mm.eg.db)
gene_vector <- gene_vector[gene_df$SYMBOL]
names(gene_vector) <- gene_df$ENTREZID
gene_vector <- sort(gene_vector, decreasing = TRUE)
gsea_go <- gseGO(
geneList      = gene_vector,
OrgDb         = org.Mm.eg.db,
ont           = "BP",
keyType       = "ENTREZID",
pAdjustMethod = "BH",
verbose       = FALSE
)
gsea_kegg <- gseKEGG(
geneList      = gene_vector,
organism      = "mmu",
pAdjustMethod = "BH",
verbose       = FALSE
)
gsea_reactome <- gsePathway(
geneList      = gene_vector,
organism      = "mouse",
pAdjustMethod = "BH",
verbose       = FALSE
)
gsea_hallmark <- GSEA(
geneList      = gene_vector,
TERM2GENE     = mm_gmt,
verbose       = FALSE
)
# 计算核心富集基因数
gsea_hallmark@result$count <-
purrr::map_int(
gsea_hallmark@result$core_enrichment,
function(x) {
length(stringr::str_split(x, pattern = "/")[[1]])
}
)
write.csv(as.data.frame(gsea_go),
file = paste0("GSEA_results/", cell, "_GSEA_GO.csv"),
row.names = FALSE)
write.csv(as.data.frame(gsea_kegg),
file = paste0("GSEA_results/", cell, "_GSEA_KEGG.csv"),
row.names = FALSE)
write.csv(as.data.frame(gsea_reactome),
file = paste0("GSEA_results/", cell, "_GSEA_Reactome.csv"),
row.names = FALSE)
write.csv(as.data.frame(gsea_hallmark),
file = paste0("GSEA_results/", cell, "_GSEA_Hallmark.csv"),
row.names = FALSE)
gsea_results_list[[paste0(cell, "_GO")]]       <- gsea_go
gsea_results_list[[paste0(cell, "_KEGG")]]     <- gsea_kegg
gsea_results_list[[paste0(cell, "_Reactome")]] <- gsea_reactome
gsea_results_list[[paste0(cell, "_Hallmark")]] <- gsea_hallmark
}
plot_df <- summary_df %>%
mutate(Down_neg = -Down) %>%
select(CellType, Up, Down_neg) %>%
pivot_longer(c(Up, Down_neg), names_to = "Regulation", values_to = "Count") %>%
mutate(Regulation = factor(Regulation,
levels = c("Down_neg","Up"),
labels = c("Down","Up")))
p <- ggplot(plot_df, aes(x = Count, y = CellType)) +
geom_blank(data = data.frame(
Regulation = c("Down","Up"),
Count      = c(-max_down, max_down),
CellType   = cell_types[1]
), aes(x = Count, y = CellType)) +
geom_col(width = 0.15, fill = "grey") +
geom_point(aes(color = CellType), size = 4) +
scale_color_manual(values = colors) +
facet_wrap(~Regulation, nrow = 1, scales = "free_x") +
scale_x_continuous(labels = function(x) abs(x)) +
theme_bw() +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.ticks.y       = element_line(),
axis.text.y        = element_text(),
strip.background   = element_blank(),
strip.placement    = "outside",
panel.spacing.x    = unit(2, "lines")
) +
xlab("Count") +
ylab("Cell Type")
All <- readRDS("/Users/coellearth/Desktop/Mammary_Gland_Diet_Project/*originaldata/Harmony/harmony_All_sub.rds")
library(ggplot2)
library(RColorBrewer)
library(dplyr)
library(tidyr)
result_list <- lapply(names(deg_list), function(cell_type) {
df <- deg_list[[cell_type]]
count_table <- table(df$regulation)
up_count <- ifelse("Up" %in% names(count_table), count_table["Up"], 0)
down_count <- ifelse("Down" %in% names(count_table), count_table["Down"], 0)
data.frame(CellType = cell_type, Up = up_count, Down = down_count)
})
summary_df <- do.call(rbind, result_list)
summary_df$Total <- summary_df$Up + summary_df$Down
print(summary_df)
summary_df$CellType <- factor(summary_df$CellType, levels = rev(summary_df$CellType))
cell_types <- levels(summary_df$CellType)
colors     <- setNames(brewer.pal(n = length(cell_types), name = "Paired"), cell_types)
max_down <- max(summary_df$Down)
plot_df <- summary_df %>%
mutate(Down_neg = -Down) %>%
select(CellType, Up, Down_neg) %>%
pivot_longer(c(Up, Down_neg), names_to = "Regulation", values_to = "Count") %>%
mutate(Regulation = factor(Regulation,
levels = c("Down_neg","Up"),
labels = c("Down","Up")))
p <- ggplot(plot_df, aes(x = Count, y = CellType)) +
geom_blank(data = data.frame(
Regulation = c("Down","Up"),
Count      = c(-max_down, max_down),
CellType   = cell_types[1]
), aes(x = Count, y = CellType)) +
geom_col(width = 0.15, fill = "grey") +
geom_point(aes(color = CellType), size = 4) +
scale_color_manual(values = colors) +
facet_wrap(~Regulation, nrow = 1, scales = "free_x") +
scale_x_continuous(labels = function(x) abs(x)) +
theme_bw() +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.ticks.y       = element_line(),
axis.text.y        = element_text(),
strip.background   = element_blank(),
strip.placement    = "outside",
panel.spacing.x    = unit(2, "lines")
) +
xlab("Count") +
ylab("Cell Type")
max_down <- max(summary_df$Down)
plot_df <- summary_df %>%
mutate(Down_neg = -Down) %>%
select(CellType, Up, Down_neg) %>%
pivot_longer(c(Up, Down_neg), names_to = "Regulation", values_to = "Count") %>%
mutate(Regulation = factor(Regulation,
levels = c("Down_neg","Up"),
labels = c("Down","Up")))
plot_df <- summary_df %>%
mutate(Down_neg = -Down) %>%
dplyr::select(CellType, Up, Down_neg) %>%
pivot_longer(c(Up, Down_neg), names_to = "Regulation", values_to = "Count") %>%
mutate(Regulation = factor(Regulation,
levels = c("Down_neg","Up"),
labels = c("Down","Up")))
p <- ggplot(plot_df, aes(x = Count, y = CellType)) +
geom_blank(data = data.frame(
Regulation = c("Down","Up"),
Count      = c(-max_down, max_down),
CellType   = cell_types[1]
), aes(x = Count, y = CellType)) +
geom_col(width = 0.15, fill = "grey") +
geom_point(aes(color = CellType), size = 4) +
scale_color_manual(values = colors) +
facet_wrap(~Regulation, nrow = 1, scales = "free_x") +
scale_x_continuous(labels = function(x) abs(x)) +
theme_bw() +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.ticks.y       = element_line(),
axis.text.y        = element_text(),
strip.background   = element_blank(),
strip.placement    = "outside",
panel.spacing.x    = unit(2, "lines")
) +
xlab("Count") +
ylab("Cell Type")
print(p)
p <- ggplot(plot_df, aes(x = Count, y = CellType)) +
geom_blank(data = data.frame(
Regulation = c("Down","Up"),
Count      = c(-max_down, max_down),
CellType   = cell_types[1]
), aes(x = Count, y = CellType)) +
geom_col(width = 0.1, fill = "black") +
geom_point(aes(color = CellType), size = 4) +
scale_color_manual(values = colors) +
facet_wrap(~Regulation, nrow = 1, scales = "free_x") +
scale_x_continuous(labels = function(x) abs(x)) +
theme_bw() +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.ticks.y       = element_line(),
axis.text.y        = element_text(),
strip.background   = element_blank(),
strip.placement    = "outside",
panel.spacing.x    = unit(2, "lines")
) +
xlab("Count") +
ylab("Cell Type")
print(p)
p <- ggplot(plot_df, aes(x = Count, y = CellType)) +
geom_blank(data = data.frame(
Regulation = c("Down","Up"),
Count      = c(-max_down, max_down),
CellType   = cell_types[1]
), aes(x = Count, y = CellType)) +
geom_col(width = 0.1, fill = "black") +
geom_point(aes(color = CellType), size = 4) +
scale_color_manual(values = colors) +
facet_wrap(~Regulation, nrow = 1, scales = "free_x") +
scale_x_continuous(labels = function(x) abs(x)) +
theme_bw() +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.ticks.y       = element_line(),
axis.text.y        = element_text(),
strip.background   = element_blank(),
strip.placement    = "outside",
panel.spacing.x    = unit(2, "lines")
) +
xlab("Count") +
ylab("Cell Type")
print(p)
p <- ggplot(plot_df, aes(x = Count, y = CellType)) +
geom_blank(data = data.frame(
Regulation = c("Down","Up"),
Count      = c(-max_down, max_down),
CellType   = cell_types[1]
), aes(x = Count, y = CellType)) +
geom_col(width = 0.05, fill = "black") +
geom_point(aes(color = CellType), size = 4) +
scale_color_manual(values = colors) +
facet_wrap(~Regulation, nrow = 1, scales = "free_x") +
scale_x_continuous(labels = function(x) abs(x)) +
theme_bw() +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.ticks.y       = element_line(),
axis.text.y        = element_text(),
strip.background   = element_blank(),
strip.placement    = "outside",
panel.spacing.x    = unit(2, "lines")
) +
xlab("Count") +
ylab("Cell Type")
print(p)
p <- ggplot(plot_df, aes(x = Count, y = CellType)) +
geom_blank(data = data.frame(
Regulation = c("Down","Up"),
Count      = c(-max_down, max_down),
CellType   = cell_types[1]
), aes(x = Count, y = CellType)) +
geom_col(width = 0.085, fill = "black") +
geom_point(aes(color = CellType), size = 4) +
scale_color_manual(values = colors) +
facet_wrap(~Regulation, nrow = 1, scales = "free_x") +
scale_x_continuous(labels = function(x) abs(x)) +
theme_bw() +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.ticks.y       = element_line(),
axis.text.y        = element_text(),
strip.background   = element_blank(),
strip.placement    = "outside",
panel.spacing.x    = unit(2, "lines")
) +
xlab("Count") +
ylab("Cell Type")
print(p)
p <- ggplot(plot_df, aes(x = Count, y = CellType)) +
geom_blank(data = data.frame(
Regulation = c("Down","Up"),
Count      = c(-max_down, max_down),
CellType   = cell_types[1]
), aes(x = Count, y = CellType)) +
geom_col(width = 0.08, fill = "black") +
geom_point(aes(color = CellType), size = 4) +
scale_color_manual(values = colors) +
facet_wrap(~Regulation, nrow = 1, scales = "free_x") +
scale_x_continuous(labels = function(x) abs(x)) +
theme_bw() +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.ticks.y       = element_line(),
axis.text.y        = element_text(),
strip.background   = element_blank(),
strip.placement    = "outside",
panel.spacing.x    = unit(2, "lines")
) +
xlab("Count") +
ylab("Cell Type")
print(p)
p <- ggplot(plot_df, aes(x = Count, y = CellType)) +
geom_blank(data = data.frame(
Regulation = c("Down","Up"),
Count      = c(-max_down, max_down),
CellType   = cell_types[1]
), aes(x = Count, y = CellType)) +
geom_col(width = 0.075, fill = "black") +
geom_point(aes(color = CellType), size = 4) +
scale_color_manual(values = colors) +
facet_wrap(~Regulation, nrow = 1, scales = "free_x") +
scale_x_continuous(labels = function(x) abs(x)) +
theme_bw() +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.ticks.y       = element_line(),
axis.text.y        = element_text(),
strip.background   = element_blank(),
strip.placement    = "outside",
panel.spacing.x    = unit(2, "lines")
) +
xlab("Count") +
ylab("Cell Type")
print(p)

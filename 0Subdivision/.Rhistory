mutate(rank_up = row_number()) %>%
ungroup() %>%
group_by(cell_type) %>%
arrange(avg_log2FC, .by_group = TRUE) %>%
mutate(rank_down = row_number()) %>%
ungroup() %>%
filter(
(direction == "Up"   & rank_up   <= topN_up) |
(direction == "Down" & rank_down <= topN_down)
)
View(sel_degs)
organized <- all_degs %>%
mutate(
neglog10FDR   = -log10(p_val_adj),
neglog10FDR_c = pmin(neglog10FDR, 50),
direction     = regulation
)
View(organized)
sel_up <- organized %>%
filter(direction == "Up") %>%
group_by(cell_type) %>%
arrange(desc(avg_log2FC), .by_group = TRUE) %>%
slice_head(n = topN_up) %>%
ungroup()
sel_down <- organized %>%
filter(direction == "Down") %>%
group_by(cell_type) %>%
arrange(avg_log2FC, .by_group = TRUE) %>%
slice_head(n = topN_down) %>%
ungroup()
sel_degs <- bind_rows(sel_up, sel_down)
gene_order <- sel_degs %>%
group_by(gene) %>%
summarise(
n_ct = n_distinct(cell_type),
mean_lfc = mean(avg_log2FC, na.rm = TRUE)
) %>%
arrange(desc(n_ct), desc(mean_lfc)) %>%
pull(gene)
ct_order <- sel_degs %>%
group_by(cell_type) %>%
summarise(sig_count = sum(direction != "NotSig")) %>%
arrange(desc(sig_count)) %>%
pull(cell_type)
plot_df <- sel_degs %>%
mutate(
gene = factor(gene, levels = rev(unique(gene_order))),
cell_type = factor(cell_type, levels = ct_order),
avg_log2FC_c = pmax(pmin(avg_log2FC, 3), -3)
)
p_de <- ggplot(plot_df, aes(x = cell_type, y = gene)) +
geom_point(aes(size = neglog10FDR_c, color = avg_log2FC_c), alpha = 1) +
scale_size(range = c(1, 5), name = expression(-log[10](FDR)), breaks = c(2,5,10,20,50)) +
scale_color_gradient2(
low = "#3b6fb6", mid = "white", high = "#cf3c3c",
midpoint = 0, limits = c(-3,3), name = "log2FC (HFD vs ND)"
) +
labs(x = "Cell type", y = "Genes (Top up & down per cell type)",
title = "Differential-expression Dotplot across cell types (HFD vs ND)") +
theme_bw(base_size = 11) +
theme(
axis.text.x  = element_text(angle = 45, hjust = 1, vjust = 1),
panel.grid   = element_blank()
)
p_de
topN_up   <- 8
topN_down <- 8
fdr_thr   <- 0.05
lfc_thr   <- 0
organized <- all_degs %>%
mutate(
neglog10FDR   = -log10(p_val_adj),
neglog10FDR_c = pmin(neglog10FDR, 50),
direction     = regulation
)
sel_up <- organized %>%
filter(direction == "Up") %>%
group_by(cell_type) %>%
arrange(desc(avg_log2FC), .by_group = TRUE) %>%
slice_head(n = topN_up) %>%
ungroup()
sel_down <- organized %>%
filter(direction == "Down") %>%
group_by(cell_type) %>%
arrange(avg_log2FC, .by_group = TRUE) %>%
slice_head(n = topN_down) %>%
ungroup()
sel_degs <- bind_rows(sel_up, sel_down)
gene_order <- sel_degs %>%
group_by(gene) %>%
summarise(
n_ct = n_distinct(cell_type),
mean_lfc = mean(avg_log2FC, na.rm = TRUE)
) %>%
arrange(desc(n_ct), desc(mean_lfc)) %>%
pull(gene)
ct_order <- sel_degs %>%
group_by(cell_type) %>%
summarise(sig_count = sum(direction != "NotSig")) %>%
arrange(desc(sig_count)) %>%
pull(cell_type)
plot_df <- sel_degs %>%
mutate(
gene = factor(gene, levels = rev(unique(gene_order))),
cell_type = factor(cell_type, levels = ct_order),
avg_log2FC_c = pmax(pmin(avg_log2FC, 3), -3)
)
p_de <- ggplot(plot_df, aes(x = cell_type, y = gene)) +
geom_point(aes(size = neglog10FDR_c, color = avg_log2FC_c), alpha = 1) +
scale_size(range = c(1, 5), name = expression(-log[10](FDR)), breaks = c(2,5,10,20,50)) +
scale_color_gradient2(
low = "#3b6fb6", mid = "white", high = "#cf3c3c",
midpoint = 0, limits = c(-3,3), name = "log2FC (HFD vs ND)"
) +
labs(x = "Cell type", y = "Genes (Top up & down per cell type)",
title = "Differential-expression Dotplot across cell types (HFD vs ND)") +
theme_bw(base_size = 11) +
theme(
axis.text.x  = element_text(angle = 45, hjust = 1, vjust = 1),
panel.grid   = element_blank()
)
p_de
topN_up   <- 5
topN_down <- 5
organized <- all_degs %>%
mutate(
neglog10FDR   = -log10(p_val_adj),
neglog10FDR_c = pmin(neglog10FDR, 50),
direction     = regulation
)
sel_up <- organized %>%
filter(direction == "Up") %>%
group_by(cell_type) %>%
arrange(desc(avg_log2FC), .by_group = TRUE) %>%
slice_head(n = topN_up) %>%
ungroup()
sel_down <- organized %>%
filter(direction == "Down") %>%
group_by(cell_type) %>%
arrange(avg_log2FC, .by_group = TRUE) %>%
slice_head(n = topN_down) %>%
ungroup()
sel_degs <- bind_rows(sel_up, sel_down)
gene_order <- sel_degs %>%
group_by(gene) %>%
summarise(
n_ct = n_distinct(cell_type),
mean_lfc = mean(avg_log2FC, na.rm = TRUE)
) %>%
arrange(desc(n_ct), desc(mean_lfc)) %>%
pull(gene)
ct_order <- sel_degs %>%
group_by(cell_type) %>%
summarise(sig_count = sum(direction != "NotSig")) %>%
arrange(desc(sig_count)) %>%
pull(cell_type)
plot_df <- sel_degs %>%
mutate(
gene = factor(gene, levels = rev(unique(gene_order))),
cell_type = factor(cell_type, levels = ct_order),
avg_log2FC_c = pmax(pmin(avg_log2FC, 3), -3)
)
p_de <- ggplot(plot_df, aes(x = cell_type, y = gene)) +
geom_point(aes(size = neglog10FDR_c, color = avg_log2FC_c), alpha = 1) +
scale_size(range = c(1, 5), name = expression(-log[10](FDR)), breaks = c(2,5,10,20,50)) +
scale_color_gradient2(
low = "#3b6fb6", mid = "white", high = "#cf3c3c",
midpoint = 0, limits = c(-3,3), name = "log2FC (HFD vs ND)"
) +
labs(x = "Cell type", y = "Genes (Top up & down per cell type)",
title = "Differential-expression Dotplot across cell types (HFD vs ND)") +
theme_bw(base_size = 11) +
theme(
axis.text.x  = element_text(angle = 45, hjust = 1, vjust = 1),
panel.grid   = element_blank()
)
p_de
p_de <- ggplot(plot_df, aes(x = cell_type, y = gene)) +
geom_point(aes(size = neglog10FDR_c, color = avg_log2FC_c), alpha = 1) +
scale_size(range = c(1, 5), name = expression(-log[10](FDR)), breaks = c(2,5,10,20,50)) +
scale_color_distiller(
palette   = "PiYG",
direction = -1,       # 控制色带方向，必要时翻转
limits    = c(-3, 3), # 保持和你原来一致
name      = "log2FC (HFD vs ND)"
) +
labs(x = "Cell type", y = "Genes (Top up & down per cell type)",
title = "Differential-expression Dotplot across cell types (HFD vs ND)") +
theme_bw(base_size = 11) +
theme(
axis.text.x  = element_text(angle = 45, hjust = 1, vjust = 1),
panel.grid   = element_blank()
)
p_de
p_de <- ggplot(plot_df, aes(x = cell_type, y = gene)) +
geom_point(aes(size = neglog10FDR_c, color = avg_log2FC_c), alpha = 1) +
scale_size(range = c(1, 5), name = expression(-log[10](FDR)), breaks = c(2,5,10,20,50)) +
scale_color_distiller(
palette   = "PiYG",
direction = -1,
limits    = c(-10, 10),
name      = "log2FC (HFD vs ND)"
) +
labs(x = "Cell type", y = "Genes (Top up & down per cell type)",
title = "Differential-expression Dotplot across cell types (HFD vs ND)") +
theme_bw(base_size = 11) +
theme(
axis.text.x  = element_text(angle = 45, hjust = 1, vjust = 1),
panel.grid   = element_blank()
)
p_de
p_de <- ggplot(plot_df, aes(x = cell_type, y = gene)) +
geom_point(aes(size = neglog10FDR_c, color = avg_log2FC_c), alpha = 1) +
scale_size(range = c(1, 5), name = expression(-log[10](FDR)), breaks = c(2,5,10,20,50)) +
scale_color_distiller(
palette   = "PiYG",
direction = -1,
limits    = c(-5, 5),
name      = "log2FC (HFD vs ND)"
) +
labs(x = "Cell type", y = "Genes (Top up & down per cell type)",
title = "Differential-expression Dotplot across cell types (HFD vs ND)") +
theme_bw(base_size = 11) +
theme(
axis.text.x  = element_text(angle = 45, hjust = 1, vjust = 1),
panel.grid   = element_blank()
)
p_de
p_de <- ggplot(plot_df, aes(x = cell_type, y = gene)) +
geom_point(aes(size = neglog10FDR_c, color = avg_log2FC_c), alpha = 1) +
scale_size(range = c(1, 5), name = expression(-log[10](FDR)), breaks = c(2,5,10,20,50)) +
scale_color_distiller(
palette   = "PiYG",
direction = -1,
limits    = c(-4, 4),
name      = "log2FC (HFD vs ND)"
) +
labs(x = "Cell type", y = "Genes (Top up & down per cell type)",
title = "Differential-expression Dotplot across cell types (HFD vs ND)") +
theme_bw(base_size = 11) +
theme(
axis.text.x  = element_text(angle = 45, hjust = 1, vjust = 1),
panel.grid   = element_blank()
)
p_de
p_de <- ggplot(plot_df, aes(x = cell_type, y = gene)) +
geom_point(aes(size = neglog10FDR_c, color = avg_log2FC_c), alpha = 1) +
scale_size(range = c(1, 5), name = expression(-log[10](FDR)), breaks = c(2,5,10,20,50)) +
scale_color_distiller(
palette   = "PiYG",
direction = -1,
limits    = c(-3.5, 3.5),
name      = "log2FC (HFD vs ND)"
) +
labs(x = "Cell type", y = "Genes (Top up & down per cell type)",
title = "Differential-expression Dotplot across cell types (HFD vs ND)") +
theme_bw(base_size = 11) +
theme(
axis.text.x  = element_text(angle = 45, hjust = 1, vjust = 1),
panel.grid   = element_blank()
)
p_de
p_de <- ggplot(plot_df, aes(x = cell_type, y = gene)) +
geom_point(aes(size = neglog10FDR_c, color = avg_log2FC_c), alpha = 1) +
scale_size(range = c(1, 5), name = expression(-log[10](FDR)), breaks = c(2,5,10,20,50)) +
scale_color_distiller(
palette   = "PiYG",
direction = -1,
limits    = c(-3, 3),
name      = "log2FC (HFD vs ND)"
) +
labs(x = "Cell type", y = "Genes (Top up & down per cell type)",
title = "Differential-expression Dotplot across cell types (HFD vs ND)") +
theme_bw(base_size = 11) +
theme(
axis.text.x  = element_text(angle = 45, hjust = 1, vjust = 1),
panel.grid   = element_blank()
)
p_de
p_de <- ggplot(plot_df, aes(x = cell_type, y = gene)) +
geom_point(aes(size = neglog10FDR_c, color = avg_log2FC_c), alpha = 1) +
scale_size(range = c(1, 4), name = expression(-log[10](FDR)), breaks = c(2,5,10,20,50)) +
scale_color_distiller(
palette   = "PiYG",
direction = -1,
limits    = c(-3, 3),
name      = "log2FC (HFD vs ND)"
) +
labs(x = "Cell type", y = "Genes (Top up & down per cell type)",
title = "Differential-expression Dotplot across cell types (HFD vs ND)") +
theme_bw(base_size = 11) +
theme(
axis.text.x  = element_text(angle = 45, hjust = 1, vjust = 1),
panel.grid   = element_blank()
)
p_de
p_de <- ggplot(plot_df, aes(x = cell_type, y = gene)) +
geom_point(aes(size = neglog10FDR_c, color = avg_log2FC_c), alpha = 1) +
scale_size(range = c(1, 4), name = expression(-log[10](FDR)), breaks = c(2,5,10,20,50)) +
scale_color_distiller(
palette   = "PiYG",
direction = -1,
limits    = c(-3, 3),
name      = "log2FC (HFD vs ND)"
) +
labs(x = "Cell type", y = "Genes (Top up & down per cell type)",
title = "Differential-expression Dotplot across cell types (HFD vs ND)") +
theme_bw(base_size = 11) +
theme(
axis.text.x  = element_text(angle = 45, hjust = 1, vjust = 1),
axis.text.y = element_text(face = "italic"),
panel.grid   = element_blank()
)
p_de
p_de <- ggplot(plot_df, aes(x = cell_type, y = gene)) +
geom_point(aes(size = neglog10FDR_c, color = avg_log2FC_c), alpha = 1) +
scale_size(range = c(1, 4), name = expression(-log[10](FDR)), breaks = c(2,5,10,20,50)) +
scale_color_distiller(
palette   = "PiYG",
direction = -1,
limits    = c(-3, 3),
name      = "log2FC (HFD vs ND)"
) +
labs(x = "Cell type", y = "Genes (Top up & down per cell type)",
title = "Differential-expression Dotplot across cell types (HFD vs ND)") +
theme_bw(base_size = 11) +
theme(
axis.text.x  = element_text(angle = 45, hjust = 1, vjust = 1),
axis.text.y = element_text(face = "italic", colour = "black"),
panel.grid   = element_blank()
)
p_de
p_de <- ggplot(plot_df, aes(x = cell_type, y = gene)) +
geom_point(aes(size = neglog10FDR_c, color = avg_log2FC_c), alpha = 1) +
scale_size(range = c(1, 4), name = expression(-log[10](FDR)), breaks = c(2,5,10,20,50)) +
scale_color_distiller(
palette   = "PiYG",
direction = -1,
limits    = c(-3, 3),
name      = "log2FC (HFD vs ND)"
) +
labs(x = "Cell type", y = "Genes (Top up & down per cell type)",
title = "Differential-expression Dotplot across cell types (HFD vs ND)") +
theme_bw(base_size = 11) +
theme(
axis.text.x  = element_text(angle = 45,
hjust = 1,
vjust = 1,
colour = "black"),
axis.text.y = element_text(face = "italic",
colour = "black"),
panel.grid   = element_blank()
)
p_de
p_de <- ggplot(plot_df, aes(x = cell_type, y = gene)) +
geom_point(aes(size = neglog10FDR_c, color = avg_log2FC_c), alpha = 1) +
scale_size(range = c(1, 4), name = expression(-log[10](FDR)), breaks = c(2,5,10,20,50)) +
scale_color_distiller(
palette   = "PiYG",
direction = -1,
limits    = c(-3, 3),
name      = "log2FC (HFD vs ND)"
) +
labs(x = "Cell type", y = "Genes (Top up & down per cell type)") +
theme_bw(base_size = 11) +
theme(
axis.text.x  = element_text(angle = 45,
hjust = 1,
vjust = 1,
colour = "black"),
axis.text.y = element_text(face = "italic",
colour = "black"),
panel.grid   = element_blank()
)
p_de
plot_df <- sel_degs %>%
mutate(
direction_order = ifelse(direction == "Up", 2, 1),
gene = fct_reorder(gene, avg_log2FC, .desc = TRUE),
cell_type = factor(cell_type, levels = ct_order),
avg_log2FC_c = pmax(pmin(avg_log2FC, 3), -3)
) %>%
arrange(cell_type, desc(direction_order), desc(avg_log2FC)) %>%
mutate(
gene = factor(gene, levels = rev(unique(gene)))  # 最后反转，保证 Up 在上面
)
p_de <- ggplot(plot_df, aes(x = cell_type, y = gene)) +
geom_point(aes(size = neglog10FDR_c, color = avg_log2FC_c), alpha = 1) +
scale_size(range = c(1, 4), name = expression(-log[10](FDR)), breaks = c(2,5,10,20,50)) +
scale_color_distiller(
palette   = "PiYG",
direction = -1,
limits    = c(-3, 3),
name      = "log2FC (HFD vs ND)"
) +
labs(x = "Cell type", y = "Genes (Top up & down per cell type)") +
theme_bw(base_size = 11) +
theme(
axis.text.x  = element_text(angle = 45,
hjust = 1,
vjust = 1,
colour = "black"),
axis.text.y = element_text(face = "italic",
colour = "black"),
panel.grid   = element_blank()
)
p_de
p_de <- ggplot(plot_df, aes(x = cell_type, y = gene)) +
geom_point(aes(size = neglog10FDR_c, color = avg_log2FC_c), alpha = 1) +
scale_size(range = c(1, 4), name = expression(-log[10](FDR)), breaks = c(2,5,10,20,50)) +
scale_color_distiller(
palette   = "PiYG",
direction = -1,
limits    = c(-3, 3),
name      = "log2FC (HFD vs ND)"
) +
labs(x = "Cell type", y = "Genes (Top up & down per cell type)") +
theme_bw(base_size = 11) +
theme(
axis.text.x  = element_text(angle = 45,
hjust = 1,
vjust = 1,
colour = "black"),
axis.text.y = element_text(face = "italic",
colour = "black"),
panel.grid   = element_blank()
) + coord_flip()
p_de
p_de <- ggplot(plot_df, aes(x = cell_type, y = gene)) +
geom_point(aes(size = neglog10FDR_c, color = avg_log2FC_c), alpha = 1) +
scale_size(range = c(1, 4), name = expression(-log[10](FDR)), breaks = c(2,5,10,20,50)) +
scale_color_distiller(
palette   = "PiYG",
direction = -1,
limits    = c(-3, 3),
name      = "log2FC (HFD vs ND)"
) +
labs(x = "Cell type", y = "Genes (Top up & down per cell type)") +
theme_bw(base_size = 11) +
theme(
axis.text.x  = element_text(angle = 45,
hjust = 1,
vjust = 1,
colour = "black"，
p_de
p_de <- ggplot(plot_df, aes(x = cell_type, y = gene)) +
geom_point(aes(size = neglog10FDR_c, color = avg_log2FC_c), alpha = 1) +
scale_size(range = c(1, 4), name = expression(-log[10](FDR)), breaks = c(2,5,10,20,50)) +
scale_color_distiller(
palette   = "PiYG",
direction = -1,
limits    = c(-3, 3),
name      = "log2FC (HFD vs ND)"
) +
labs(x = "Cell type", y = "Genes (Top up & down per cell type)") +
theme_bw(base_size = 11) +
theme(
axis.text.x  = element_text(angle = 45,
hjust = 1,
vjust = 1,
colour = "black",
face = "italic"),
axis.text.y = element_text(# face = "italic",
colour = "black"),
panel.grid   = element_blank()
) + coord_flip()
p_de
p_de <- ggplot(plot_df, aes(x = cell_type, y = gene)) +
geom_point(aes(size = neglog10FDR_c, color = avg_log2FC_c), alpha = 1) +
scale_size(range = c(1, 4), name = expression(-log[10](FDR)), breaks = c(2,5,10,20,50)) +
scale_color_distiller(
palette   = "PiYG",
direction = -1,
limits    = c(-3, 3),
name      = "log2FC (HFD vs ND)"
) +
labs(x = "Cell type", y = "Genes (Top up & down per cell type)") +
theme_bw(base_size = 11) +
theme(
axis.text.x  = element_text(angle = 45,
hjust = 1,
vjust = 1,
colour = "black",
face = "italic"),
axis.text.y = element_text(# face = "italic",
colour = "black"),
panel.grid   = element_blank()
) # + coord_flip()
p_de
p_de <- ggplot(plot_df, aes(x = cell_type, y = gene)) +
geom_point(aes(size = neglog10FDR_c, color = avg_log2FC_c), alpha = 1) +
scale_size(range = c(1, 4), name = expression(-log[10](FDR)), breaks = c(2,5,10,20,50)) +
scale_color_distiller(
palette   = "PiYG",
direction = -1,
limits    = c(-3, 3),
name      = "log2FC (HFD vs ND)"
) +
labs(x = "Cell type", y = "Genes (Top up & down per cell type)") +
theme_bw(base_size = 11) +
theme(
axis.text.x  = element_text(angle = 45,
hjust = 1,
vjust = 1,
colour = "black",
# face = "italic"
),
axis.text.y = element_text(face = "italic",
colour = "black"),
panel.grid   = element_blank()
) # + coord_flip()
p_de
